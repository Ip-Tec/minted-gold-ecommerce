generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Admin {
  id        Int    @id @default(autoincrement())
  username  String @unique(map: "Admin_username_key")
  email     String @unique(map: "Admin_email_key")
  provider  String
  adminrole String
  name      String @default("")

  role     Role      @relation(fields: [adminrole], references: [name], map: "Admin_adminrole_fkey")
  products Product[]
  roles    Role[]    @relation("admintorole")
}

model Order {
  id          Int       @id @default(autoincrement())
  orderNumber String
  orderStatus String
  buyerId     Int
  createdAt   DateTime  @default(now())
  buyer       User      @relation(fields: [buyerId], references: [id], map: "Order_buyerId_fkey")
  products    Product[] @relation("ordertoproduct")

  @@index([buyerId], map: "Order_buyerId_fkey")
}

model Product {
  id            Int       @id @default(autoincrement())
  title         String
  description   String
  price         Float
  adminUsername String
  category      String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @default(now())
  image         Json
  stock         String
  admin         Admin     @relation(fields: [adminUsername], references: [username], map: "Product_adminUsername_fkey")
  categories    Categorie @relation(fields: [category], references: [name], map: "Product_categorie_fkey")
  orders        Order[]   @relation("ordertoproduct")
  users         User[]    @relation("wishlistitem")

  @@index([adminUsername], map: "Product_adminUsername_fkey")
}

model Role {
  id          Int     @id @default(autoincrement())
  name        String  @unique(map: "Role_name_key")
  description String
  admins      Admin[] @relation("admintorole")
  Admin       Admin[]
}

model Categorie {
  id          Int       @id @default(autoincrement())
  name        String    @unique(map: "Categorie_name_key")
  description String
  product     Product[]
}

model User {
  id            Int       @id @default(autoincrement())
  firstName     String
  lastName      String
  email         String    @unique(map: "User_email_key")
  contactNumber String
  password      String
  createdAt     DateTime  @default(now())
  isActive      Boolean   @default(true)
  orders        Order[]
  products      Product[] @relation("wishlistitem")
}
